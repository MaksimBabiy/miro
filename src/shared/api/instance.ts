import createFetchClient from "openapi-fetch";
import createClient from "openapi-react-query";
import type { paths } from "./schema/generated"; // generated by openapi-typescript
import { CONFIG } from "@/shared/model/config";
import { refreshToken } from "../lib/refreshtoken";


export const fetchClient = createFetchClient<paths>({
  baseUrl: CONFIG.API_BASE_URL,
});
export const publicFetchClient = createFetchClient<paths>({
  baseUrl: CONFIG.API_BASE_URL,
});



export const rqClient = createClient(fetchClient);
export const pbClient = createClient(publicFetchClient);


fetchClient.use({
   async onRequest({request}) {

    const token = await refreshToken();
  
    if (token) {
      request.headers.set("Authorization", `Bearer ${token}`);
    } else {
      return new Response(JSON.stringify({
        code: "NOT_AUTHORIZED",
        message: "User is not authorized"
      }), { status: 401, headers: {
        "Content-Type": "application/json"
      } });
    }
  }
})